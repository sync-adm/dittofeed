version: "3.9"

x-clickhouse-credentials: &clickhouse-credentials
  CLICKHOUSE_USER: ${CLICKHOUSE_USER:-dittofeed}
  CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD:-changeme}

x-backend-app-env: &backend-app-env
  <<: *clickhouse-credentials
  NODE_ENV: production
  DATABASE_URL: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?connect_timeout=60"
  KAFKA_BROKERS: "kafka:29092"
  CLICKHOUSE_HOST: "http://clickhouse-server:8123"
  TEMPORAL_ADDRESS: "temporal:7233"
  API_HOST: "0.0.0.0"
  LOG_CONFIG: "true"

services:
  dashboard:
    image: ${DOCKER_REGISTRY}/dashboard:${TAG:-latest}
    build:
      context: .
      dockerfile: ./packages/dashboard/Dockerfile
    volumes:
      - dittofeed-mnt:/dittofeed-mnt
    depends_on:
      postgres:
        condition: service_healthy
      temporal:
        condition: service_started
      api:
        condition: service_started
      clickhouse-server:
        condition: service_healthy
    environment:
      <<: *backend-app-env
      PORT: 3000

  api:
    image: ${DOCKER_REGISTRY}/api:${TAG:-latest}
    build:
      context: .
      dockerfile: ./packages/api/Dockerfile
    volumes:
      - dittofeed-mnt:/dittofeed-mnt
    depends_on:
      postgres:
        condition: service_healthy
      clickhouse-server:
        condition: service_healthy
      temporal:
        condition: service_started
    environment:
      <<: *backend-app-env
      PORT: 3001
      BOOTSTRAP_EVENTS: "true"

  worker:
    image: ${DOCKER_REGISTRY}/worker:${TAG:-latest}
    build:
      context: .
      dockerfile: ./packages/worker/Dockerfile
    volumes:
      - dittofeed-mnt:/dittofeed-mnt
    depends_on:
      postgres:
        condition: service_healthy
      temporal:
        condition: service_started
      clickhouse-server:
        condition: service_healthy
    environment:
      <<: *backend-app-env

  temporal:
    image: temporalio/auto-setup:1.18.5
    environment:
      DB: postgresql
      DB_PORT: 5432
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PWD: ${POSTGRES_PASSWORD}
      POSTGRES_SEEDS: postgres
      DYNAMIC_CONFIG_FILE_PATH: config/dynamicconfig/dev.yaml
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7233/"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB:-dittofeed}
      POSTGRES_USER: ${POSTGRES_USER}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres-data:/var/lib/postgresql/data

  kafka:
    image: redpandadata/redpanda:v23.1.1
    command:
      - redpanda
      - start
      - --kafka-addr internal://0.0.0.0:29092
      - --advertise-kafka-addr kafka:29092
      - --mode dev-container
    volumes:
      - kafka-data:/var/lib/redpanda/data

  clickhouse-server:
    image: clickhouse/clickhouse-server:23.8.8.20-alpine
    environment:
      <<: *clickhouse-credentials
    volumes:
      - clickhouse-config:/etc/clickhouse-server/config.xml
      - clickhouse-data:/var/lib/clickhouse
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:8123/ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres-data:
  kafka-data:
  clickhouse-data:
  clickhouse-config:
  dittofeed-mnt:
