version: "3.9"

x-database-credentials: &database-credentials
  DATABASE_USER: ${DATABASE_USER}
  DATABASE_PASSWORD: ${DATABASE_PASSWORD}

x-clickhouse-credentials: &clickhouse-credentials
  CLICKHOUSE_USER: ${CLICKHOUSE_USER}
  CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD}

x-backend-app-env: &backend-app-env
  <<: [*clickhouse-credentials, *database-credentials]
  NODE_ENV: production
  DATABASE_HOST: ${DATABASE_HOST}
  DATABASE_PORT: ${DATABASE_PORT}
  CLICKHOUSE_HOST: ${CLICKHOUSE_HOST}
  TEMPORAL_ADDRESS: ${TEMPORAL_ADDRESS}
  WORKSPACE_NAME: ${WORKSPACE_NAME}
  AUTH_MODE: ${AUTH_MODE}
  SECRET_KEY: ${SECRET_KEY}
  PASSWORD: ${PASSWORD}
  DASHBOARD_API_BASE: ${DASHBOARD_API_BASE}

services:
  lite:
    image: dittofeed/dittofeed-lite:${IMAGE_TAG}
    restart: unless-stopped
    command: node --max-old-space-size=${LITE_MEM_LIMIT} ./packages/lite/dist/scripts/startLite.js --workspace-name=${WORKSPACE_NAME}
    deploy:
      resources:
        limits:
          memory: ${LITE_CONTAINER_MEM_LIMIT}m
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - temporal
      - clickhouse-server
    environment:
      <<: *backend-app-env
      BOOTSTRAP: "true"
    networks:
      - coolify

  temporal:
    image: temporalio/auto-setup:${TEMPORAL_VERSION}
    restart: unless-stopped
    environment:
      - DB=postgresql
      - DB_PORT=${DATABASE_PORT}
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PWD=${DATABASE_PASSWORD}
      - POSTGRES_SEEDS=${DATABASE_HOST}
      - DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/prod.yaml
    volumes:
      - ./packages/backend-lib/temporal-dynamicconfig:/etc/temporal/config/dynamicconfig
    ports:
      - "7233:7233"
    networks:
      - coolify

  postgres:
    image: postgres:${POSTGRES_VERSION}
    restart: unless-stopped
    environment:
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_DB=dittofeed
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - coolify

  clickhouse-server:
    image: clickhouse/clickhouse-server:23.8.8.20-alpine
    restart: unless-stopped
    environment:
      <<: *clickhouse-credentials
    volumes:
      - clickhouse_lib:/var/lib/clickhouse
      - clickhouse_log:/var/log/clickhouse-server
    networks:
      - coolify

volumes:
  postgres:
  clickhouse_lib:
  clickhouse_log:

networks:
  coolify:
    external: true
