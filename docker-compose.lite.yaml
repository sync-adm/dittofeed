version: "3.9"

x-database-credentials: &database-credentials
  DATABASE_USER: ${POSTGRES_USER}
  DATABASE_PASSWORD: ${POSTGRES_PASSWORD}

x-clickhouse-credentials: &clickhouse-credentials
  CLICKHOUSE_USER: ${CLICKHOUSE_USER}
  CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD}

x-backend-app-env: &backend-app-env
  <<: [*database-credentials, *clickhouse-credentials]
  NODE_ENV: production
  DATABASE_HOST: postgres
  DATABASE_PORT: 5432
  CLICKHOUSE_HOST: http://clickhouse-server:8123
  TEMPORAL_ADDRESS: temporal:7233
  WORKSPACE_NAME: ${WORKSPACE_NAME:-Default}
  AUTH_MODE: single-tenant
  SECRET_KEY: ${SECRET_KEY}
  PASSWORD: ${ADMIN_PASSWORD}
  DASHBOARD_API_BASE: ${DASHBOARD_FQDN}

services:
  lite:
    image: ${DOCKER_REGISTRY}/lite:${TAG:-latest}
    restart: unless-stopped
    command: node --max-old-space-size=${LITE_MEM_LIMIT:-512} ./packages/lite/dist/scripts/startLite.js
    depends_on:
      postgres:
        condition: service_healthy
      temporal:
        condition: service_healthy
      clickhouse-server:
        condition: service_healthy
    environment:
      <<: *backend-app-env
      BOOTSTRAP: "true"
      PORT: 3000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  temporal:
    image: temporalio/auto-setup:${TEMPORAL_VERSION:-1.22.4}
    environment:
      DB: postgresql
      DB_PORT: 5432
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PWD: ${POSTGRES_PASSWORD}
      POSTGRES_SEEDS: postgres
      DYNAMIC_CONFIG_FILE_PATH: config/dynamicconfig/prod.yaml
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7233/"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: dittofeed
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

  clickhouse-server:
    image: clickhouse/clickhouse-server:23.8.8.20-alpine
    environment:
      <<: *clickhouse-credentials
    volumes:
      - clickhouse-data:/var/lib/clickhouse
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:8123/ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  blob-storage:
    image: minio/minio
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    command: server --console-address ":9001" /data
    volumes:
      - minio-data:/data

volumes:
  postgres-data:
  clickhouse-data:
  minio-data:
